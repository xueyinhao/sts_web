<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->

    <!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.hao.controller" />
	
	<mvc:annotation-driven />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean>
	
	<mvc:interceptors>  
	    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
	    <bean class="com.hao.interceptor.FirstInterceptor"/>
	    <bean class="com.hao.interceptor.SecondInterceptor"/>  
	    <!-- <mvc:interceptor>  
	        <mvc:mapping path="/**"/>  
	        定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
	        <bean class="com.hao.interceptor.FirstInterceptor"/>  
	    </mvc:interceptor>   -->
	</mvc:interceptors> 

</beans>
